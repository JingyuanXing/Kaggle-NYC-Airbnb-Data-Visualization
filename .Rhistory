knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
airbnb <- read.csv("AB_NYC_2019.csv")
head(airbnb)
ggplot(airbnb, aes(x = price))+
geom_histogram()+
labs(title = "Histogram of NYC Airbnb Price",
x = "Price ($)",
y = "Frequency Count")
ggplot(airbnb, aes(x = price, fill = as.factor(neighbourhood)))+
geom_histogram()+
labs(title = "Histogram of NYC Airbnb Price",
x = "Price ($)",
y = "Frequency Count")
ggplot(airbnb, aes(x = price, fill = as.factor(neighbourhood_group)))+
geom_histogram()+
labs(title = "Histogram of NYC Airbnb Price",
x = "Price ($)",
y = "Frequency Count")
ggplot(airbnb, aes(x = price, fill = as.factor(neighbourhood_group)))+
geom_histogram()+
labs(title = "Histogram of NYC Airbnb Price",
x = "Price ($)",
y = "Frequency Count",
fill = "Neighbourhood Group")
C = cor(airbnb)
airbnb_cont <- dplyr::select(airbnb, id, host_id, latitude, longitude, price, minimum_nights, number_of_reviews, reviews_per_month, calculated_host_listings_count, availability_365)
C = cor(airbnb_cont)
mC = melt(C)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(reshape2)
airbnb <- read.csv("AB_NYC_2019.csv")
head(airbnb)
ggplot(airbnb, aes(x = price, fill = as.factor(neighbourhood_group)))+
geom_histogram()+
labs(title = "Histogram of NYC Airbnb Price",
x = "Price ($)",
y = "Frequency Count",
fill = "Neighbourhood Group")
airbnb_cont <- dplyr::select(airbnb, id, host_id, latitude, longitude, price, minimum_nights, number_of_reviews, reviews_per_month, calculated_host_listings_count, availability_365)
C = cor(airbnb_cont)
mC = melt(C)
p = ggplot(data = mC, aes(x = Var1, y = Var2, fill = value))+
geom_tile()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = "Correlation Heap Map of NYC Airbnb",
x = "Variables",
y = "Variables",
fill = "Correlation values")
plot(p)
library(tidyverse)
library(ggplot2)
library(reshape2)
airbnb <- read.csv("AB_NYC_2019.csv")
airbnb
airbnb_cont <- dplyr::select(airbnb, id, host_id, latitude, longitude, price, minimum_nights, number_of_reviews, reviews_per_month, calculated_host_listings_count, availability_365)
airbnb_count[is.na(airbnb_cont$reviews_per_month), ] <- 0
airbnb_cont <- dplyr::select(airbnb, id, host_id, latitude, longitude, price, minimum_nights, number_of_reviews, reviews_per_month, calculated_host_listings_count, availability_365)
airbnb_cont[is.na(airbnb_cont$reviews_per_month), ] <- 0
C = cor(airbnb_cont)
mC = melt(C)
p = ggplot(data = mC, aes(x = Var1, y = Var2, fill = value))+
geom_tile()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = "Correlation Heap Map of NYC Airbnb",
x = "Variables",
y = "Variables",
fill = "Correlation values")
plot(p)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(reshape2)
library(MASS)
library(GGally)
airbnb <- read.csv("AB_NYC_2019.csv")
airbnb
ggplot(airbnb, aes(x = price, fill = as.factor(neighbourhood_group)))+
geom_histogram()+
labs(title = "Histogram of NYC Airbnb Price",
x = "Price ($)",
y = "Frequency Count",
fill = "Neighbourhood Group")
airbnb_cont <- dplyr::select(airbnb, id, host_id, latitude, longitude, price, minimum_nights, number_of_reviews, reviews_per_month, calculated_host_listings_count, availability_365)
airbnb_cont[is.na(airbnb_cont$reviews_per_month), ] <- 0
C = cor(airbnb_cont)
mC = melt(C)
p = ggplot(data = mC, aes(x = Var1, y = Var2, fill = value))+
geom_tile()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = "Correlation Heap Map of NYC Airbnb",
x = "Variables",
y = "Variables",
fill = "Correlation values")
plot(p)
ggparcoord(airbnb, columns = airbnb_cont)+
aes(color = as.factor(neighbourhood_group))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = "Parallel Coordinate Graph of NYC Airbnb by Neighbourhood Group",
x = "Continuous Variables",
y = "Values",
color = "Neighbourhood Group")
cont_cols <- which(names(airbnb)) %in%
c("airbnb", "id", "host_id", "latitude", "longitude", "price", "minimum_nights", "number_of_reviews", "reviews_per_month", "calculated_host_listings_count", "availability_365")
cont_cols <- which(names(airbnb) %in%
c("airbnb", "id", "host_id", "latitude", "longitude", "price", "minimum_nights", "number_of_reviews", "reviews_per_month", "calculated_host_listings_count", "availability_365"))
ggparcoord(airbnb, columns = cont_cols)+
aes(color = as.factor(neighbourhood_group))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = "Parallel Coordinate Graph of NYC Airbnb by Neighbourhood Group",
x = "Continuous Variables",
y = "Values",
color = "Neighbourhood Group")
cont_cols <- which(names(airbnb) %in%
c("airbnb", "id", "host_id", "latitude", "longitude", "price", "minimum_nights", "number_of_reviews", "reviews_per_month", "calculated_host_listings_count", "availability_365"))
ggparcoord(airbnb, columns = cont_cols)+
aes(color = as.factor(neighbourhood_group))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = "Parallel Coordinate Graph of NYC Airbnb by Neighbourhood Group",
x = "Continuous Variables",
y = "Values",
color = "Neighbourhood Group")
ggparcoord(airbnb, columns = cont_cols)+
aes(color = as.factor(neighbourhood_group))+
coord_polar()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = "Radar Graph of NYC Airbnb by Neighbourhood Group",
x = "Continuous Variables",
y = "Values",
color = "Neighbourhood Group")
cont_cols <- which(names(airbnb) %in%
c("airbnb", "id", "host_id", "latitude", "longitude", "price", "minimum_nights", "number_of_reviews", "reviews_per_month", "calculated_host_listings_count", "availability_365"))
ggparcoord(airbnb, columns = cont_cols)+
aes(color = as.factor(neighbourhood_group))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = "Parallel Coordinate Graph of NYC Airbnb by Neighbourhood Group",
x = "Continuous Variables",
y = "Values",
color = "Neighbourhood Group")
ggparcoord(airbnb, columns = cont_cols)+
aes(color = as.factor(neighbourhood_group))+
coord_polar()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
labs(title = "Radar Graph of NYC Airbnb by Neighbourhood Group",
x = "Continuous Variables",
y = "Values",
color = "Neighbourhood Group")
ggplot(airbnb, aes(x = price, fill = as.factor(neighbourhood_group)))+
geom_histogram(bins = 10)+
labs(title = "Histogram of NYC Airbnb Price",
x = "Price ($)",
y = "Frequency Count",
fill = "Neighbourhood Group")
ggplot(airbnb, aes(x = price, fill = as.factor(neighbourhood_group)))+
geom_histogram(bins = 40)+
labs(title = "Histogram of NYC Airbnb Price",
x = "Price ($)",
y = "Frequency Count",
fill = "Neighbourhood Group")
ggplot(airbnb, aes(x = price, fill = as.factor(neighbourhood_group)))+
geom_histogram(bins = 40)+
labs(title = "Histogram of NYC Airbnb Price",
x = "Price ($)",
y = "Frequency Count",
fill = "Neighbourhood Group")
summary(airbnb$price)
airbnb_cont <- dplyr::select(airbnb, id, host_id, latitude, longitude, price, minimum_nights, number_of_reviews, reviews_per_month, calculated_host_listings_count, availability_365)
airbnb_cont[is.na(airbnb_cont$reviews_per_month), ] <- 0
C = cor(airbnb_cont)
mC = melt(C)
p = ggplot(data = mC, aes(x = Var1, y = Var2, fill = value))+
geom_tile()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
scale_fill_gradient2(low = "red", mid = "lightgrey", high = "blue", limits = c(-1,1))+
labs(title = "Correlation Heap Map of NYC Airbnb",
x = "Continuous Variables",
y = "Continuous Variables",
fill = "Correlation values")
plot(p)
cont_cols <- which(names(airbnb) %in%
c("airbnb", "latitude", "longitude", "price", "minimum_nights", "number_of_reviews", "reviews_per_month", "calculated_host_listings_count", "availability_365"))
ggparcoord(airbnb, columns = cont_cols)+
aes(color = as.factor(neighbourhood_group))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = "Parallel Coordinate Graph of NYC Airbnb by Neighbourhood Group",
x = "Continuous Variables",
y = "Values",
color = "Neighbourhood Group")
ggparcoord(airbnb, columns = cont_cols)+
aes(color = as.factor(neighbourhood_group))+
coord_polar()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
labs(title = "Radar Graph of NYC Airbnb by Neighbourhood Group",
x = "Continuous Variables",
y = "Values",
color = "Neighbourhood Group")
airbnb_cont <- dplyr::select(airbnb, latitude, longitude, price, minimum_nights, number_of_reviews, reviews_per_month, calculated_host_listings_count, availability_365)
airbnb_cont[is.na(airbnb_cont$reviews_per_month), ] <- 0
C = cor(airbnb_cont)
mC = melt(C)
p = ggplot(data = mC, aes(x = Var1, y = Var2, fill = value))+
geom_tile()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
scale_fill_gradient2(low = "red", mid = "lightgrey", high = "blue", limits = c(-1,1))+
labs(title = "Correlation Heap Map of NYC Airbnb",
x = "Continuous Variables",
y = "Continuous Variables",
fill = "Correlation values")
plot(p)
